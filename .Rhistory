# Load Required Packages: to be increased over the course
requiredPackages <- c("car","knitr","FactoMineR","missMDA","mvoutlier","chemometrics")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
#setwd("C:/Users/Sergio/Dropbox/UPC/FIB/Analisis de datos y explotacion de la informacion (ADEI)/Proyecto/")
#setwd("C:/Users/GUILLEM/Documents/ADEI/FIB-ADEI-Big-Data-Analysis")
setwd("C:/Users/usuario/Documents/ADEI/FIB-ADEI-Big-Data-Analysis")
load("set-datos.RData", envir = parent.frame(), verbose = FALSE)
#Comprobar el tamaño de la muestra
dim(df)
# Graphics
names(df)
# Overview of data frame
summary(df)
# List with names of target variables
vars_target<-names(df)[c(11,21)];vars_target
summary(df[,vars_target])
hist(df$duration,100)
boxplot(df$duration)
# Some useful functions
calcQ <- function(x) {
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
out.var<-calcQ(df$duration)
abline(h=650,col="red",lwd=2)
abline(h=979,col="magenta",lwd=2)
#eliminamos las filas con NA's en las variables target (Duration & Y)
sel<-which(is.na(df$duration));sel
sel<-which(is.na(df$y));sel
summary(df)
####GUILLEM: Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in names$df){levels(df$i)}
####GUILLEM: Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in names$df){print(i)}
names(df)
prova=names(df)
prova
prova[1]
####GUILLEM: Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in names(df)){print(i)}
####GUILLEM: Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in names(df)){levels(df$i)}
levels(df$age)
levels(df$day_of_week)
####GUILLEM: Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in names(df)){levels(df[,i])}
levels(df$age)
levels(df$day_of_week)
#######################GUILLEM:
#Separamos variables numéricas y de factores
vars_num<-names(df)[c(1,11:14,16:20)]
vars_fac<-names(df)[c(2:10,15,21:23)]
#######################GUILLEM:
#Separamos variables numéricas y de factores
vars_num<-names(df)[c(1,11:14,16:20)];vars_num
vars_fac<-names(df)[c(2:10,15,21:23)];vars_fac
#######################GUILLEM:
#Separamos variables numéricas y categóricas
df[1,:]
#######################GUILLEM:
#Separamos variables numéricas y categóricas
df[1,]
vars_num<-names(df)[c(1,11:14,16:20)];vars_num
vars_cat<-names(df)[c(2:10,15,21:23)];vars_cat
vars_cat<-names(df)[-vars_num];vars_cat
vars_num<-names(df)[aux];vars_num
aux <- c(1,11:14,16:20)
vars_num<-names(df)[aux];vars_num
vars_cat<-names(df)[-aux];vars_cat
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in df[,vars_cat]){levels(df[i])}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in df[,vars_cat]){print(i);levels(df[i])}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in df[,vars_cat]){levels(df[i])}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in df[,vars_cat]){print(levels(df[i]))}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in df[,vars_cat]){levels(df[i])}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in df[,vars_cat]){a<-levels(df[i]);print(a)}
vars_cat<-names(df)[-aux];vars_cat
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in df[,vars_cat]){levels(df[i])}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in df[,vars_cat]){names(df[i]);levels(df[i])}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in names(df[,vars_cat]){names(df[i]);levels(df[i])}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in names(df[,vars_cat])){names(df[i]);levels(df[i])}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in df[,vars_cat]){names(df[i]);levels(df[i])}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in df[,vars_cat]){names(i);levels(i)}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in df[,vars_cat]){i;names(i);levels(i)}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for(i in df[,vars_cat]){print(i);names(i);levels(i)}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for (n in names(df))
if (is.factor(df[[n]])) {
print(n)
print(levels(df[[n]]))
}
aux2 <- which(df.isfactor)
aux2 <- which(df.is.factor())
aux2 <- sapply(df, is.factor)
aux2
for (n in names(df)){
if (is.factor(df[[n]])) {
vars_cat <- c(vars_cat,n)
}}
for (n in names(df)){
if (is.factor(df[[n]])) {
vars_cat <- c(vars_cat,n)
}}
aux <- c(1,11:14,16:20)
vars_num<-names(df)[which(df)];vars_num
vars_num<-names(df)[aux]];vars_num
vars_num<-names(df)[aux];vars_num
vars_cat<-names(df)[-aux];vars_cat
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
for (n in names(df)){
if (is.factor(df[[n]])) {
vars_cat2 <- c(vars_cat2,n)
}}
#Miramos qué niveles hay de cada variable para decidir qué valores son erróneos y por tanto deben ser NA's
vars_cat2 <- c()
for (n in names(df)){
if (is.factor(df[[n]])) {
vars_cat2 <- c(vars_cat2,n)
}}
vars_cat
vars_cat2
vars_num<-names(df)[-vars_cat];vars_num
aux <- c(1,11:14,16:20)
vars_num<-names(df)[aux];vars_num
vars_cat<-names(df)[-aux];vars_cat
#Analizamos variables según si son cat/num o target/no-target (obtenemos 4 clasificaciones)
#target+categorica (miramos qué nivles tiene)
levels(df['y'])
#Analizamos variables según si son cat/num o target/no-target (obtenemos 4 clasificaciones)
#target+categorica (miramos qué nivles tiene)
levels(df[,'y'])
#Analizamos variables según si son cat/num o target/no-target (obtenemos 4 clasificaciones)
#target+categorica (miramos qué nivles tiene)
levels(df$y) #solo hay yes/no no hay que hacer nada
#target+numerica (miramos qué valores toma)
summary(df$duracion)
#target+numerica (miramos qué valores toma)
summary(df$duration)
hist(df$duration,100) #Miramos distribución
boxplot(df$duration) #Hacemos boxplot para ver outliers
# Some useful functions
calcQ <- function(x) {
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
out.var<-calcQ(df$duration)
out.var<-calcQ(df$duration);out.var
abline(h=650,col="red",lwd=2) #Fijamos límite soft
abline(h=650,col="red",lwd=2) #Fijamos límite extreme
abline(h=979,col="magenta",lwd=2) #Fijamos límite soft
